#!/bin/bash


#======================================
# Usage & Args
#======================================
function usage {
cat << EOF
Usage:
        difdir <ref_dir> <comp_dir>

        + Launch gvimdiff on files that are different in ref_dir and comp_dir.
        + Recursive script (goes in sub directories, exept for symbolic links).
        + If a file is in ref_dir and not in comp_dir, it will be printed on stdout.
        + If a file is in comp_dir and not in ref_dir, it won't be printed.

Option:
        -h to get this help
EOF
}


if [ "$1" == "-h" ] || [ "$#" -ne 2 ]
then
  usage
  exit 1
fi
ref_dir="$1"
comp_dir="$2"



#======================================
# Execution
#======================================
function diff_dir {
  dir="$1"
  sub_dirs=""
  for file in $(ls $dir)
  do
    path="$dir/$file"
    if [ -d "$path" ]
    then
      sub_dirs="$sub_dirs $path"
      # skip symbolic link dir ; CVS and output
      [ -h $path ]              && sub_dirs=""
      [[ $path =~ "output" ]]   && sub_dirs=""
      [[ $path =~ "CVS"    ]]   && sub_dirs=""
    else
      if sha1sum $comp_dir/$path &> /dev/null
      then
        sha_arasan=$(sha1sum $comp_dir/$path | sed 's/ .*//')
        sha_sigm=$(sha1sum $path | sed 's/ .*//')
        if [ $sha_sigm != $sha_arasan ]
        then
          echo "DIFFERENT FILES: $path"
          gvimdiff $path $comp_dir/$path &> /dev/null
        fi
      else
        [ -f "$path" ] && echo "Not found in comp_dir: $path"
      fi
    fi
  done

  # Recursion on sub dirs
  for dir in $sub_dirs
  do
    diff_dir "$dir"
  done
}


# Launch recursive function
diff_dir "$ref_dir"
